// 插入排序
// 将数组分为两个区间，已排序和未排序区间，初始化已排序区间只有一个元素，就是数组的第一个元素，
// 插入排序的核心算法是取未排序区间的元素，在已排序区间找到合适的位置将其插入，并保证已排序区间数据一直有序，重复该过程，直到未排序区间元素为空

// 插入排序是原地排序算法
// 插入排序是稳定的排序算法
// 时间复杂度是 O(n2)

// 插入排序比冒泡排序受欢迎
// 冒泡排序再怎么优化，元素交换的次数都是一个固定值，是原始数据的逆序度；插入排序是同样的，不管怎么优化，元素移动次数也等于原始数据的逆序度
// 主要是冒泡排序3次赋值操作，插入排序只需要1次
const InsertionSort = (arr) => {
  let length = arr.length;
  if (length <= 1) return;
  for(let i = 0; i < length; i++) {
    let ai = arr[i];
    let j = i - 1;
    // 查找插入的位置
    for( ; j >= 0; j--) {
      if (arr[j] > ai) {
        arr[j + 1] = arr[j]; // 数据移动
      } else {
        break;
      }
    }
    arr[j + 1] = ai; // 插入数据
  }
}
